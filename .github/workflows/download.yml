name: Spike Download

on:
  workflow_dispatch:
  workflow_run:
    workflows: [Spike Upload]
    types: [completed]

jobs:
  download_version:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.set-variables.outputs.version }}
    steps:  
      - name: "Download artifact"
        uses: actions/github-script@v7
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "variables"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/variables.zip`, Buffer.from(download.data));

      - name: "Unzip artifact"
        run: unzip variables.zip

      - name: Read variables
        run: |
          cat ./VERSION

      - name: Set variables
        id: set-variables
        run: |
          echo "version=$(cat ./VERSION)" >> "$GITHUB_OUTPUT"

  use_version:
    needs: download_version
    runs-on: ubuntu-latest
    steps:  
      - name: Use version    
        run: echo "Package Version $PACKAGE_VERSION"
        env:
          PACKAGE_VERSION: ${{needs.download_version.outputs.package_version}}
          
